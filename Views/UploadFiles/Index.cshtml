@model voteCollector.Models.FileModel
@{
    ViewData["Title"] = "Index";
}
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions {
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
<div class="row">
    <input type="hidden" id="RequestVerificationToken"
           name="RequestVerificationToken" value="@GetAntiXsrfRequestToken()">
    <div class="form-row">
        <div class="form-group col-md-6">
            <input type="file" id="uploadFileFriends" name="uploadFileFriends" accept=".xls, .xlsx" /><br /><br />
        </div>
    </div>
</div>
<div class="row">
    <div class="form-row">
        <div class="form-group col-md-6">
            <input type="button" id="btnUploadFriends" value="Загрузить в сервис" onclick="UploadExcelToWebService('uploadFileFriends');" />
        </div>
    </div>
</div>
<br />

<h4>Незагруженные строки</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <div class="form-group col-md-6">
            <label class="control-label"></label>
            <select id="Records" class="form-control">
                <option></option>
            </select>
            <span class="text-danger"></span>
        </div>
    </div>
</div>

<environment include="Development">
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
</environment>

<environment include="Production">
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
</environment>


@section Scripts {

    <script type="text/javascript" src="~/js/JS_UploadFiles.js"></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    @{
        if (TempData["msg"] != null)
        {
            <script>
                alert('@TempData["msg"]')
            </script>
        }
    }
}

